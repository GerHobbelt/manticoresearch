stages:
  - build
  - repoupload
  - deploy

variables:
  CMAKE_INTERPROCEDURAL_OPTIMIZATION: 0
  VERBOSE: 1
  DIAGNOSTIC: 1

.build:
  stage: build
  interruptible: true
  needs: [ ]
  tags:
    - docker
  rules:
    - if: $WHAT=='$WHAT'
    - if: $WHAT==null
    - if: $WHAT=="all"
  variables:
    CACHEB: "../cache"
  script:
    - mkdir build && cd build
    - cmake -GNinja -DPACK=1 -DBUILD_TAG=$RELEASE_TAG $XTRAFLAGS ..
    - cmake --build . --target package

.redhat_based:
  extends: [ .build ]
  variables:
    REPO_DIST_NAME: "centos"
  before_script:
    - ln -s $(pwd) /manticore012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789/src
    - cd /manticore012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789/src
  artifacts:
    paths:
      - build/manticore*.rpm
    when: on_success
    expire_in: 12 hrs

.debian_based:
  extends: [ .build ]
  artifacts:
    paths:
      - build/manticore*deb
    when: on_success
    expire_in: 12 hrs

.collect_job:
  variables:
    GIT_STRATEGY: fetch
  stage: repoupload
  interruptible: true
  tags:
    - dev-host
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: manual
      allow_failure: true
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH =~ /^manticore-.*$/
      when: on_success

.collect_deb:
  extends: [ .collect_job ]
  script:
    - /bin/bash dist/upload_repo_deb.sh

.collect_rpm:
  extends: [ .collect_job ]
  script:
    - /bin/bash dist/upload_repo_rpm.sh

.collect_arc:
  extends: [ .collect_job ]
  needs: [ osx ]
  script:
    - /bin/bash dist/upload_repo_arc.sh

osx:
  extends: [ .build ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /osx/
  image: registry.gitlab.com/manticoresearch/dev/cross_bigsur:x64
  cache:
    key: bigsur
    paths:
      - cache
  artifacts:
    paths:
      - build/manticore-*.tar.gz
    when: on_success
    expire_in: 12 hrs

collect_osx:
  extends: [ .collect_arc ]
  needs: [ osx ]



windows:
  stage: build
  interruptible: true
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /windows/
  needs: [ ]
  tags:
    - windev19
    - build
  variables:
    LIBS_BUNDLE: "x:/bundle"
    CACHEB: "x:/cache"
    BOOST_ROOT: "x:/boost_1_75_0"
  script:
    - 'net use x: \\\\VBOXSRV\\shared'
    - mkdir build
    - cd build
    - cmake -DBUILD_TAG=$RELEASE_TAG -DDISTR_BUILD=default -DWITH_SSL=1 ..
    - cmake --build . --target package --config RelWithDebInfo
  artifacts:
    paths:
      - build/manticore-*.zip
    when: on_success
    expire_in: 12 hrs
  cache: { }

collect_windows:
  extends: [ .collect_arc ]
  needs: [ windows ]



rhel7:
  extends: [ .redhat_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /rhel7/
  variables:
    REPO_DIST_VER: "7"
  image: registry.gitlab.com/manticoresearch/dev/centos7_clang:7
  cache:
    key: rhel7
    paths:
      - cache

collect_rhel7:
  extends: [ .collect_rpm ]
  needs: [ rhel7 ]
  variables:
    DISTRO: 7



rhel8:
  extends: [ .redhat_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /rhel8/
  variables:
    REPO_DIST_VER: "8"
  image: registry.gitlab.com/manticoresearch/dev/centos8_clang:11
  cache:
    key: rhel8
    paths:
      - cache

collect_rhel8:
  extends: [ .collect_rpm ]
  needs: [ rhel8 ]
  variables:
    DISTRO: 8



stretch:
  extends: [ .debian_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /stretch/
  image: registry.gitlab.com/manticoresearch/dev/stretch_clang:13
  cache:
    key: stretch
    paths:
      - cache

collect_stretch:
  extends: [ .collect_deb ]
  needs: [ stretch ]
  variables:
    DISTRO: stretch



xenial:
  extends: [ .debian_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /xenial/
  image: registry.gitlab.com/manticoresearch/dev/xenial_clang:12
  cache:
    key: xenial
    paths:
      - cache

collect_xenial:
  extends: [ .collect_deb ]
  needs: [ xenial ]
  variables:
    DISTRO: xenial



bionic:
  extends: [ .debian_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /bionic/
  image: registry.gitlab.com/manticoresearch/dev/bionic_clang:13
  cache:
    key: bionic
    paths:
      - cache

collect_bionic:
  extends: [ .collect_deb ]
  needs: [ bionic ]
  variables:
    DISTRO: bionic



focal:
  extends: [ .debian_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /focal/
  image: registry.gitlab.com/manticoresearch/dev/focal_clang:13
  cache:
    key: focal
    paths:
      - cache

collect_focal:
  extends: [ .collect_deb ]
  needs: [ focal ]
  variables:
    DISTRO: focal




focalarm:
  extends: [ .debian_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /focalarm/
  tags:
    - arm64
    - focal
  variables:
    XTRAFLAGS: "-DCMAKE_C_COMPILER=/usr/bin/clang-12 -DCMAKE_CXX_COMPILER=/usr/bin/clang++-12"
  cache:
    key: focalarm
    paths:
      - cache

collect_focalarm:
  extends: [ .collect_deb ]
  needs: [ focalarm ]
  variables:
    DISTRO: focal



buster:
  extends: [ .debian_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /buster/
  image: registry.gitlab.com/manticoresearch/dev/buster_clang:13
  cache:
    key: buster
    paths:
      - cache

collect_buster:
  extends: [ .collect_deb ]
  needs: [ buster ]
  variables:
    DISTRO: buster



bullseye:
  extends: [ .debian_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /bullseye/
  image: registry.gitlab.com/manticoresearch/dev/bullseye_clang:13
  cache:
    key: bullseye
    paths:
      - cache

collect_bullseye:
  extends: [ .collect_deb ]
  needs: [ bullseye ]
  variables:
    DISTRO: bullseye



jammy:
  extends: [ .debian_based ]
  rules:
    - !reference [ .build, rules ]
    - if: $WHAT =~ /jammy/
  image: registry.gitlab.com/manticoresearch/dev/jammy_cmake:323
  cache:
    key: jammy
    paths:
      - cache

collect_jammy:
  extends: [ .collect_deb ]
  needs: [ jammy ]
  variables:
    DISTRO: jammy



build_docker:
  stage: deploy
  needs:
    - job: collect_bionic
      optional: true
  interruptible: true
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $REPO_NAME=='$REPO_NAME'
    - if: $WHAT=='$WHAT'
    - if: $WHAT==null && $CI_COMMIT_BRANCH == "master"
  tags:
    - dev-host
  script:
    - echo "Build docker image"
    - ~/build.sh
