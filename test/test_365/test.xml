<?xml version="1.0" encoding="utf-8"?>
<test>

<name>KEYWORDS for bigram</name>

<config>
indexer
{
	mem_limit		= 16M
}

searchd
{
	<searchd_settings/>
}

source src_bi
{
	type			= mysql
	<sql_settings/>
	sql_query		= select * from test_table
	sql_attr_uint	= gid
}

index idx_bi
{
	source = src_bi
	path			= <data_path/>/idx_bi
	
	bigram_index = all
	dict = keywords
	min_prefix_len = 2
}

index rt_bi
{
	type = rt
	path			= <data_path/>/rt_bi
	rt_mem_limit = 128k
	
	rt_field		= title
	rt_attr_uint	= gid
	
	bigram_index = all
	dict = keywords
	min_prefix_len = 2
}

index dist_local
{
	type = distributed
	local = idx_bi
	local = rt_bi
}

index dist_remote
{
	type = distributed
	agent = <my_address/>:dist_local
	agent_connect_timeout	= 1000
	agent_query_timeout		= 3000	
}

source src_bi2
{
	type			= mysql
	<sql_settings/>
	sql_query		= select * from test_table2
	sql_attr_uint	= gid
}

index idx_bi2
{
	source = src_bi2
	path			= <data_path/>/idx_bi2
	
	bigram_index = all
	dict = keywords
	min_infix_len = 2
    expand_keywords = 1
    index_exact_words = 1
    morphology = stem_en
}

index rt_bi2
{
	type = rt
	path			= <data_path/>/rt_bi2
	rt_mem_limit = 128k
	
	rt_field		= title
	rt_attr_uint	= gid
	
	bigram_index = all
	dict = keywords
	min_infix_len = 2
    expand_keywords = 1
    index_exact_words = 1
    morphology = stem_en
}

</config>
<db_create>
CREATE TABLE `test_table` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `gid` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
)
</db_create>
<db_drop>DROP TABLE IF EXISTS `test_table`;</db_drop>
<db_insert>INSERT INTO `test_table` VALUES ( 1, 1, 'manticore search is the best'), (2, 2, 'manticore is more better' ), (3, 3, 'search with manticore like many' )</db_insert>

<db_create>
CREATE TABLE `test_table2` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `gid` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
)
</db_create>
<db_drop>DROP TABLE IF EXISTS `test_table2`;</db_drop>
<db_insert>INSERT INTO `test_table2` VALUES ( 1, 1, 'intel i3 10200'), (2, 2, 'intel i5 10500' ), (3, 3, 'intel pentium' )</db_insert>

<queries><sphinxql>
INSERT INTO rt_bi (id, gid, title) VALUES ( 1, 1, 'manticore search is the best'), (2, 2, 'manticore is more better' );

CALL KEYWORDS ( 'manti*', 'idx_bi', 1 AS stats, 0 AS fold_wildcards, 'hits' as sort_mode );
CALL KEYWORDS ( 'manti*', 'rt_bi', 1 AS stats, 0 AS fold_wildcards, 'hits' as sort_mode );

FLUSH RAMCHUNK rt_bi;
INSERT INTO rt_bi (id, gid, title) VALUES (3, 3, 'search with manticore like many' );
CALL KEYWORDS ( 'manti*', 'rt_bi', 1 AS stats, 0 AS fold_wildcards, 'hits' as sort_mode );

<!-- regression keywords to distributed index via API -->
CALL KEYWORDS ( 'manti*', 'dist_local', 1 AS stats, 0 AS fold_wildcards, 'hits' as sort_mode );
CALL KEYWORDS ( 'manti*', 'dist_remote', 1 AS stats, 0 AS fold_wildcards, 'hits' as sort_mode );

<!-- regression keywords to bigram index with expand -->
INSERT INTO rt_bi2 (id, gid, title) VALUES ( 1, 1, 'intel i3 10200'), (2, 2, 'intel i5 10500' ), (3, 3, 'intel pentium' );
SELECT * FROM idx_bi2 WHERE MATCH ('*intel*' ) ORDER BY id asc;
SELECT * FROM rt_bi2 WHERE MATCH ('*intel*' ) ORDER BY id asc;
</sphinxql>
<sphinxql>
CALL KEYWORDS ( '*intel*', 'idx_bi2', 1 AS stats, 'hits' AS sort_mode )
</sphinxql>
<sphinxql>
CALL KEYWORDS ( '*intel*', 'rt_bi2', 1 AS stats, 'hits' AS sort_mode )

</sphinxql></queries>

</test>
