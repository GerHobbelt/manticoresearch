<test>
<name>field position limit vs many hits</name>

<config>
indexer
{
	mem_limit = 16M
}

searchd
{
	<searchd_settings/>
}

source test
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT * FROM test_table
	sql_attr_uint	= idd
	sql_file_field	= body
}

index test
{
	source			= test
	path			= <data_path/>/test
	
	html_strip		= 1	
	index_sp		= 1
	index_zones		= zone*
}

source start_end
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT id, body, 1 as idd FROM start_end_table
	sql_attr_uint	= idd
	sql_field_string	= body
}

index start_end
{
	source			= start_end
	path			= <data_path/>/start_end
}

source src_1
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT 1 as id, 'Footpath' as title, 'Republic of Ireland' as country
	sql_field_string	= title
	sql_field_string	= country
}

index i1
{
	source			= src_1
	path			= <data_path/>/i1
	min_word_len = 1
	morphology = stem_en
	index_exact_words = 1
}

source src_fl
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT 1 as id, 'we are from here' as title, 'but live there all the time' as body UNION SELECT 2 as id, 'but live there all the time' as title, 'we are from here' as body
	sql_field_string	= title
	sql_field_string	= body
}

index fl
{
	source			= src_fl
	path			= <data_path/>/fl
}

source src_blend
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT 1 as id, 'dummy1 dummy1 dummy1 dummy1 X-COM' as title, 'dummy1 dummy1, dummy1, dummy1 dummy1 dummy1 valid dummy1 dummy1 dummy1 X-COM, dummy1' as body
	sql_field_string	= title
	sql_field_string	= body
}

index idx_blend_crc
{
	source			= src_blend
	path			= <data_path/>/idx_blend_crc
	morphology		= stem_enru
	min_prefix_len	= 3
	index_exact_words	= 1
	blend_mode		= trim_head, trim_tail, trim_both
	blend_chars 	= +, %, -
	dict = crc	
}

index idx_blend_kw
{
	source			= src_blend
	path			= <data_path/>/idx_blend_kw
	morphology		= stem_enru
	min_prefix_len	= 3
	index_exact_words	= 1
	blend_mode		= trim_head, trim_tail, trim_both
	blend_chars 	= +, %, -
	dict			= keywords
}

index rt
{
	type = rt
	path			= <data_path/>/rt
	rt_mem_limit = 128k
	rt_attr_uint	= idd
	rt_field = title
	rt_field = description
	dict = keywords
}

source src_field_plain
{
	type = mysql
	<sql_settings/>
	sql_query = SELECT * FROM test_field
    sql_attr_uint	    = idd
}

index field_plain
{
	source			= src_field_plain
	path			= <data_path/>/field_plain
	dict			= keywords
}

index field_rt
{
	type = rt
	path			= <data_path/>/field_rt
	rt_mem_limit = 128k
	dict = keywords
	rt_attr_uint	= idd
	rt_field = q1
    rt_field = q2
}
</config>

<db_create>
CREATE TABLE test_table
(
	id INT NOT NULL,
	body VARCHAR(2048) NOT NULL,
	idd INT NOT NULL
);
</db_create>
<db_create>
CREATE TABLE start_end_table
(
	id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
	body VARCHAR(64) NOT NULL
);
</db_create>
<db_create>
CREATE TABLE test_field
(
	id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
	q1 VARCHAR(64) NOT NULL,
    q2 VARCHAR(64) NOT NULL,
    idd INT NOT NULL
);
</db_create>

<db_drop>drop table if exists test_table;</db_drop>
<db_drop>drop table if exists start_end_table;</db_drop>
<db_drop>drop table if exists test_field;</db_drop>

<db_insert>insert into test_table values ( 1, 'test_148/doc1.txt', 1 );</db_insert>
<db_insert>insert into test_table values ( 2, 'test_148/doc2.txt', 2 );</db_insert>
<db_insert>insert into test_table values ( 3, 'test_148/doc3.txt', 3 );</db_insert>
<db_insert>
	<repeat count="98">insert into start_end_table (body) values ('ABB')<db_insert/></repeat>
	insert into start_end_table (body) values ('ABB abc ABB')<db_insert/>
	<repeat count="501">insert into start_end_table (body) values ('ABB')<db_insert/></repeat>
</db_insert>
<db_insert>insert into test_field values ( 1, 'test', 'test', 1 ), ( 2, 'test', 'test2', 2);</db_insert>

<queries>
	<sphinxql>
	select * from test where match ('ZONE:zoneA dummy');
	select * from test where match ('@body[1024] text');
	select * from test where match ('@body[1024] dummy');
	select * from start_end where match ('@body ABB') group by idd;
	select * from start_end where match ('@body ^ABB') group by idd;
	select * from start_end where match ('@body ABB$') group by idd;
	select * from start_end where match ('@body ^ABB$') group by idd;
	<!-- regression of field end marker at exact term -->
	select * from i1 where match (' "=Republic =of =Ireland" ');
	select * from i1 where match (' "^=Republic =of =Ireland" ');
	select * from i1 where match (' "=Republic =of =Ireland$" ');
	select * from i1 where match (' "^=Republic =of =Ireland$" ');
	select * from i1 where match (' =Footpath$ ');
	select * from i1 where match (' ^=Footpath$ ');
	
	<!-- regression of field limit propagation -->
	select * from fl where match (' (@title we) live ');
	select * from fl where match (' (@title we are) (@body live there) from time ');
	select * from fl where match (' are (@body we) from time ');
	select * from fl where match (' are (@body we) from (@title time the) here ');
	
	<!-- regression of field end marker vs blended -->
	select * from idx_blend_crc where match (' x-com NEAR/10 valid');
	select * from idx_blend_kw where match (' x-com NEAR/10 valid ');
	CALL SNIPPETS ( 'dummy1 dummy1 valid dummy1 dummy1 dummy1 X-COM, dummy1', 'idx_blend_kw', 'x-com NEAR/10 valid', 1 as query_mode );

	<!-- regression of field position limit vs RT index -->
	REPLACE INTO rt (id, title, description) VALUES (1, 'This is a simple test', 'This is a longer description of a simple test');
	SELECT id FROM rt WHERE MATCH('@description test');
	SELECT id FROM rt WHERE MATCH('@description[10] test');
    
	<!-- regression of field end remove -->
	REPLACE INTO field_rt (id, q1, q2, idd) VALUES ( 1, 'test', 'test', 1 ), ( 2, 'test', 'test2', 2);
	SELECT id FROM field_rt WHERE MATCH('@q1 ^test$') order by id asc;
    SELECT id FROM field_plain WHERE MATCH('@q1 ^test$') order by id asc;
	</sphinxql>
</queries>
</test>
